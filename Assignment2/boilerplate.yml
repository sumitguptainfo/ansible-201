---
- hosts: ubuntu
  become: true

  vars:
    UBUNTU_COMMON_ROOT_PASSWORD: 12345
    UBUNTU_COMMON_DEPLOY_PASSWORD: 12345
    UBUNTU_COMMON_LOGWATCH_EMAIL:
      - sumitguptainfo@gmail.com
     
    ubuntu_common_deploy_user_name: deploy
    ubuntu_common_deploy_public_keys:
      - ssh/sumit.pub

    ubuntu_common_required_packages:
      - ufw
      - fail2ban
      - unattended-upgrades
      - logwatch
      - mailutils
    ubuntu_common_optional_packages:
      - mosh
      - vim

    ubuntu_allow_port:
      - 22
      - 80
      - 8080
      - 3306
    ubuntu_common_ssh_port: 22
    ubuntu_common_mosh_from_port: 1
    ubuntu_common_mosh_to_port: 60010

  tasks:
    - name: Change root password
      user: name=root password="{{ UBUNTU_COMMON_ROOT_PASSWORD }}"

    - name: Add deploy user
      user: name={{ ubuntu_common_deploy_user_name }} password="{{ UBUNTU_COMMON_DEPLOY_PASSWORD }}" shell=/bin/bash

    - name: Add authorized keys for deploy user
      authorized_key: user={{ ubuntu_common_deploy_user_name }} key="{{ lookup('file', item) }}"
      with_items: "{{ ubuntu_common_deploy_public_keys }}"

    - name: Add deploy user to sudoers
      lineinfile: dest=/etc/sudoers
                  regexp="{{ ubuntu_common_deploy_user_name }} ALL"
                  line="{{ ubuntu_common_deploy_user_name }} ALL=(ALL) ALL"
                  state=present

    - name: Update APT package cache
      apt: update_cache=yes cache_valid_time=3600

    - name: Upgrade APT to the latest packages
      apt: upgrade=safe

    - name: Install required packages
      apt: state=present pkg={{ item }}
      with_items: "{{ ubuntu_common_required_packages }}"

    - name: Install optional packages
      apt: state=present pkg={{ item }}
      with_items: "{{ ubuntu_common_optional_packages }}"

    - name: Adjust APT update intervals
      copy: src=apt_periodic dest=/etc/apt/apt.conf.d/10periodic

    - name: Setup ufw
      ufw: state=enabled policy=deny

    - name: Allow  traffic
      ufw: rule=allow port={{ item }} proto=tcp
      with_items: "{{ ubuntu_allow_port }}"

    - name: Allow mosh traffic
      ufw: rule=allow proto=udp port={{ ubuntu_common_mosh_from_port }}:{{ ubuntu_common_mosh_to_port }}
      when: "'mosh' in ubuntu_common_optional_packages"

    - name: Set up Postfix to relay mail
      debconf: name=postfix
               question='{{ item.question }}'
               value='{{ item.value }}'
               vtype='{{ item.vtype }}'
      with_items:
        - { question: 'postfix/mailname', value: '{{ ansible_fqdn }}', vtype: 'string' }
        - { question: 'postfix/main_mailer_type', value: 'Internet Site', vtype: 'string' }

    - name: Step-1 postfix config
      blockinfile: path=/etc/postfix/main.cf block="{{lookup('file', '/home/devopsadmin/ansible201/main.cf')}}" create=yes state=present

    - name: Step-2 Gmail username and password
      copy:
       src: /home/devopsadmin/ansible201/sasl_passwd
       dest: /etc/postfix/sasl_passwd  # link to /path/to/file
       follow: no

    - name: Step-3 Fix permission and update postfix config to use sasl_passwd file
      shell:
       " sudo chmod 400 /etc/postfix/sasl_passwd && sudo postmap /etc/postfix/sasl_passwd "

    - name: Step-4 validate certificates to avoid running into error
      shell:
       " cat /etc/ssl/certs/thawte_Primary_Root_CA.pem | sudo tee -a /etc/postfix/cacert.pem "

    - name: Step-5 reload postfix config for changes to take effect
      shell:
       " sudo /etc/init.d/postfix reload "

#    - name: Step-6 sending mail
#      shell:
#       " sudo /usr/sbin/logwatch --output mail --mailto {{ UBUNTU_COMMON_LOGWATCH_EMAIL }} --detail high"

    - name: Email log summary daily
      lineinfile: dest=/etc/cron.daily/00logwatch
                  regexp="^/usr/sbin/logwatch"
                  line="/usr/sbin/logwatch --output mail --mailto {{ UBUNTU_COMMON_LOGWATCH_EMAIL }} --detail high"
                  state=present create=yes

    - name: Step-6 sending mail
      shell:
       " sudo /usr/sbin/logwatch --output mail --mailto {{ item }} --detail high"
      with_items: "{{ UBUNTU_COMMON_LOGWATCH_EMAIL }}"



    - name: Change ssh port
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^Port\s"
                  line="Port {{ ubuntu_common_ssh_port }}"
                  state=present
      notify: Restart ssh

    - name: Disallow password authentication
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^PasswordAuthentication"
                  line="PasswordAuthentication no"
                  state=present
      notify: Restart ssh

    - name: Disallow root SSH access
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^PermitRootLogin"
                  line="PermitRootLogin no"
                  state=present
      notify: Restart ssh
      tags: ssh

  handlers:
    - name: Restart ssh
      service: name=ssh state=restarted
